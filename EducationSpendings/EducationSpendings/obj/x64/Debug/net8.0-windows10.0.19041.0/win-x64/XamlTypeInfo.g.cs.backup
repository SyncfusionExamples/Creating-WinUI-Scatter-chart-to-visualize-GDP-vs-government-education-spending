//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Diagnostics.CodeAnalysis;


namespace EducationSpendings
{
    public partial class App : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2506")]
        private global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2506")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2506")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2506")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2506")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace EducationSpendings.EducationSpendings_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2506")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::Windows.Foundation.Metadata.DefaultOverload]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2506")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;
        
        private void InitTypeTables()
        {
            _typeNameTable = new string[72];
            _typeNameTable[0] = "Microsoft.UI.Xaml.Controls.XamlControlsResources";
            _typeNameTable[1] = "Microsoft.UI.Xaml.ResourceDictionary";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Boolean";
            _typeNameTable[4] = "EducationSpendings.RoundConverter.RoundConverter";
            _typeNameTable[5] = "Syncfusion.UI.Xaml.Charts.SfCartesianChart";
            _typeNameTable[6] = "Syncfusion.UI.Xaml.Charts.ChartBase";
            _typeNameTable[7] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[8] = "Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection";
            _typeNameTable[9] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>";
            _typeNameTable[10] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>";
            _typeNameTable[11] = "Syncfusion.UI.Xaml.Charts.CartesianSeries";
            _typeNameTable[12] = "Syncfusion.UI.Xaml.Charts.ChartSeries";
            _typeNameTable[13] = "Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings";
            _typeNameTable[14] = "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings";
            _typeNameTable[15] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[16] = "String";
            _typeNameTable[17] = "Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior";
            _typeNameTable[18] = "Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior";
            _typeNameTable[19] = "Syncfusion.UI.Xaml.Charts.ChartBehavior";
            _typeNameTable[20] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Media.Brush>";
            _typeNameTable[21] = "Microsoft.UI.Xaml.Media.Brush";
            _typeNameTable[22] = "Microsoft.UI.Xaml.DataTemplate";
            _typeNameTable[23] = "Syncfusion.UI.Xaml.Charts.ChartLegendIcon";
            _typeNameTable[24] = "System.Enum";
            _typeNameTable[25] = "System.ValueType";
            _typeNameTable[26] = "TimeSpan";
            _typeNameTable[27] = "Syncfusion.UI.Xaml.Charts.ChartAxis";
            _typeNameTable[28] = "Microsoft.UI.Xaml.HorizontalAlignment";
            _typeNameTable[29] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>";
            _typeNameTable[30] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>";
            _typeNameTable[31] = "Double";
            _typeNameTable[32] = "Microsoft.UI.Xaml.Style";
            _typeNameTable[33] = "Syncfusion.UI.Xaml.Charts.LabelStyle";
            _typeNameTable[34] = "Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode";
            _typeNameTable[35] = "Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction";
            _typeNameTable[36] = "Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode";
            _typeNameTable[37] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>";
            _typeNameTable[38] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>";
            _typeNameTable[39] = "Syncfusion.UI.Xaml.Charts.RangeAxisBase";
            _typeNameTable[40] = "Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode";
            _typeNameTable[41] = "Int32";
            _typeNameTable[42] = "Syncfusion.UI.Xaml.Charts.ChartLegend";
            _typeNameTable[43] = "Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior";
            _typeNameTable[44] = "Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior";
            _typeNameTable[45] = "Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior";
            _typeNameTable[46] = "Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior";
            _typeNameTable[47] = "Microsoft.UI.Xaml.Thickness";
            _typeNameTable[48] = "Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior";
            _typeNameTable[49] = "Syncfusion.UI.Xaml.Charts.ChartInteractiveBehavior";
            _typeNameTable[50] = "Windows.Foundation.Rect";
            _typeNameTable[51] = "Microsoft.UI.Xaml.VerticalAlignment";
            _typeNameTable[52] = "Syncfusion.UI.Xaml.Sliders.SfSlider";
            _typeNameTable[53] = "Syncfusion.UI.Xaml.Sliders.SliderBase";
            _typeNameTable[54] = "Syncfusion.UI.Xaml.Sliders.ThumbType";
            _typeNameTable[55] = "Syncfusion.UI.Xaml.Sliders.Placement";
            _typeNameTable[56] = "Microsoft.UI.Xaml.Controls.Orientation";
            _typeNameTable[57] = "Syncfusion.UI.Xaml.Charts.NumericalAxis";
            _typeNameTable[58] = "Syncfusion.UI.Xaml.Charts.NumericalPadding";
            _typeNameTable[59] = "Microsoft.UI.Xaml.Media.FontFamily";
            _typeNameTable[60] = "Microsoft.UI.Xaml.Media.SolidColorBrush";
            _typeNameTable[61] = "Syncfusion.UI.Xaml.Charts.LegendPlacement";
            _typeNameTable[62] = "Microsoft.UI.Xaml.CornerRadius";
            _typeNameTable[63] = "Microsoft.UI.Xaml.Visibility";
            _typeNameTable[64] = "Syncfusion.UI.Xaml.Charts.ScatterSeries";
            _typeNameTable[65] = "Syncfusion.UI.Xaml.Charts.XyDataSeries";
            _typeNameTable[66] = "EducationSpendings.MainWindow";
            _typeNameTable[67] = "Microsoft.UI.Xaml.Window";
            _typeNameTable[68] = "Microsoft.UI.Xaml.Controls.TreeViewNode";
            _typeNameTable[69] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>";
            _typeNameTable[70] = "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter";
            _typeNameTable[71] = "Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter";

            _typeTable = new global::System.Type[72];
            _typeTable[0] = typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources);
            _typeTable[1] = typeof(global::Microsoft.UI.Xaml.ResourceDictionary);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Boolean);
            _typeTable[4] = typeof(global::EducationSpendings.RoundConverter.RoundConverter);
            _typeTable[5] = typeof(global::Syncfusion.UI.Xaml.Charts.SfCartesianChart);
            _typeTable[6] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartBase);
            _typeTable[7] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[8] = typeof(global::Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection);
            _typeTable[9] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>);
            _typeTable[10] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>);
            _typeTable[11] = typeof(global::Syncfusion.UI.Xaml.Charts.CartesianSeries);
            _typeTable[12] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartSeries);
            _typeTable[13] = typeof(global::Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings);
            _typeTable[14] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings);
            _typeTable[15] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[16] = typeof(global::System.String);
            _typeTable[17] = typeof(global::Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior);
            _typeTable[18] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior);
            _typeTable[19] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartBehavior);
            _typeTable[20] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Brush>);
            _typeTable[21] = typeof(global::Microsoft.UI.Xaml.Media.Brush);
            _typeTable[22] = typeof(global::Microsoft.UI.Xaml.DataTemplate);
            _typeTable[23] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon);
            _typeTable[24] = typeof(global::System.Enum);
            _typeTable[25] = typeof(global::System.ValueType);
            _typeTable[26] = typeof(global::System.TimeSpan);
            _typeTable[27] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAxis);
            _typeTable[28] = typeof(global::Microsoft.UI.Xaml.HorizontalAlignment);
            _typeTable[29] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>);
            _typeTable[30] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>);
            _typeTable[31] = typeof(global::System.Double);
            _typeTable[32] = typeof(global::Microsoft.UI.Xaml.Style);
            _typeTable[33] = typeof(global::Syncfusion.UI.Xaml.Charts.LabelStyle);
            _typeTable[34] = typeof(global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode);
            _typeTable[35] = typeof(global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction);
            _typeTable[36] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode);
            _typeTable[37] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>);
            _typeTable[38] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>);
            _typeTable[39] = typeof(global::Syncfusion.UI.Xaml.Charts.RangeAxisBase);
            _typeTable[40] = typeof(global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode);
            _typeTable[41] = typeof(global::System.Int32);
            _typeTable[42] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartLegend);
            _typeTable[43] = typeof(global::Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior);
            _typeTable[44] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior);
            _typeTable[45] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior);
            _typeTable[46] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior);
            _typeTable[47] = typeof(global::Microsoft.UI.Xaml.Thickness);
            _typeTable[48] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior);
            _typeTable[49] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartInteractiveBehavior);
            _typeTable[50] = typeof(global::Windows.Foundation.Rect);
            _typeTable[51] = typeof(global::Microsoft.UI.Xaml.VerticalAlignment);
            _typeTable[52] = typeof(global::Syncfusion.UI.Xaml.Sliders.SfSlider);
            _typeTable[53] = typeof(global::Syncfusion.UI.Xaml.Sliders.SliderBase);
            _typeTable[54] = typeof(global::Syncfusion.UI.Xaml.Sliders.ThumbType);
            _typeTable[55] = typeof(global::Syncfusion.UI.Xaml.Sliders.Placement);
            _typeTable[56] = typeof(global::Microsoft.UI.Xaml.Controls.Orientation);
            _typeTable[57] = typeof(global::Syncfusion.UI.Xaml.Charts.NumericalAxis);
            _typeTable[58] = typeof(global::Syncfusion.UI.Xaml.Charts.NumericalPadding);
            _typeTable[59] = typeof(global::Microsoft.UI.Xaml.Media.FontFamily);
            _typeTable[60] = typeof(global::Microsoft.UI.Xaml.Media.SolidColorBrush);
            _typeTable[61] = typeof(global::Syncfusion.UI.Xaml.Charts.LegendPlacement);
            _typeTable[62] = typeof(global::Microsoft.UI.Xaml.CornerRadius);
            _typeTable[63] = typeof(global::Microsoft.UI.Xaml.Visibility);
            _typeTable[64] = typeof(global::Syncfusion.UI.Xaml.Charts.ScatterSeries);
            _typeTable[65] = typeof(global::Syncfusion.UI.Xaml.Charts.XyDataSeries);
            _typeTable[66] = typeof(global::EducationSpendings.MainWindow);
            _typeTable[67] = typeof(global::Microsoft.UI.Xaml.Window);
            _typeTable[68] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode);
            _typeTable[69] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>);
            _typeTable[70] = typeof(global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter);
            _typeTable[71] = typeof(global::Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_XamlControlsResources() { return new global::Microsoft.UI.Xaml.Controls.XamlControlsResources(); }
        private object Activate_4_RoundConverter() { return new global::EducationSpendings.RoundConverter.RoundConverter(); }
        private object Activate_5_SfCartesianChart() { return new global::Syncfusion.UI.Xaml.Charts.SfCartesianChart(); }
        private object Activate_8_CartesianSeriesCollection() { return new global::Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection(); }
        private object Activate_9_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>(); }
        private object Activate_10_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>(); }
        private object Activate_13_CartesianDataLabelSettings() { return new global::Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings(); }
        private object Activate_17_DataPointSelectionBehavior() { return new global::Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior(); }
        private object Activate_29_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>(); }
        private object Activate_30_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>(); }
        private object Activate_33_LabelStyle() { return new global::Syncfusion.UI.Xaml.Charts.LabelStyle(); }
        private object Activate_37_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>(); }
        private object Activate_38_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>(); }
        private object Activate_42_ChartLegend() { return new global::Syncfusion.UI.Xaml.Charts.ChartLegend(); }
        private object Activate_43_SeriesSelectionBehavior() { return new global::Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior(); }
        private object Activate_44_ChartZoomPanBehavior() { return new global::Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior(); }
        private object Activate_45_ChartTrackballBehavior() { return new global::Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior(); }
        private object Activate_46_ChartCrosshairBehavior() { return new global::Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior(); }
        private object Activate_48_ChartTooltipBehavior() { return new global::Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior(); }
        private object Activate_49_ChartInteractiveBehavior() { return new global::Syncfusion.UI.Xaml.Charts.ChartInteractiveBehavior(); }
        private object Activate_52_SfSlider() { return new global::Syncfusion.UI.Xaml.Sliders.SfSlider(); }
        private object Activate_57_NumericalAxis() { return new global::Syncfusion.UI.Xaml.Charts.NumericalAxis(); }
        private object Activate_64_ScatterSeries() { return new global::Syncfusion.UI.Xaml.Charts.ScatterSeries(); }
        private object Activate_66_MainWindow() { return new global::EducationSpendings.MainWindow(); }
        private object Activate_68_TreeViewNode() { return new global::Microsoft.UI.Xaml.Controls.TreeViewNode(); }
        private object Activate_70_DoubleToObjectConverter() { return new global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter(); }
        private object Activate_71_DoubleToVisibilityConverter() { return new global::Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter(); }
        private void StaticInitializer_0_XamlControlsResources() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources).TypeHandle);
        private void StaticInitializer_4_RoundConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::EducationSpendings.RoundConverter.RoundConverter).TypeHandle);
        private void StaticInitializer_5_SfCartesianChart() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.SfCartesianChart).TypeHandle);
        private void StaticInitializer_6_ChartBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartBase).TypeHandle);
        private void StaticInitializer_8_CartesianSeriesCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection).TypeHandle);
        private void StaticInitializer_9_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>).TypeHandle);
        private void StaticInitializer_10_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>).TypeHandle);
        private void StaticInitializer_11_CartesianSeries() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.CartesianSeries).TypeHandle);
        private void StaticInitializer_12_ChartSeries() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartSeries).TypeHandle);
        private void StaticInitializer_13_CartesianDataLabelSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings).TypeHandle);
        private void StaticInitializer_14_ChartDataLabelSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings).TypeHandle);
        private void StaticInitializer_17_DataPointSelectionBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior).TypeHandle);
        private void StaticInitializer_18_ChartSelectionBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior).TypeHandle);
        private void StaticInitializer_19_ChartBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartBehavior).TypeHandle);
        private void StaticInitializer_20_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Brush>).TypeHandle);
        private void StaticInitializer_23_ChartLegendIcon() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon).TypeHandle);
        private void StaticInitializer_24_Enum() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Enum).TypeHandle);
        private void StaticInitializer_25_ValueType() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.ValueType).TypeHandle);
        private void StaticInitializer_26_TimeSpan() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.TimeSpan).TypeHandle);
        private void StaticInitializer_27_ChartAxis() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartAxis).TypeHandle);
        private void StaticInitializer_29_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>).TypeHandle);
        private void StaticInitializer_30_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>).TypeHandle);
        private void StaticInitializer_33_LabelStyle() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.LabelStyle).TypeHandle);
        private void StaticInitializer_34_EdgeLabelsDrawingMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode).TypeHandle);
        private void StaticInitializer_35_AxisLabelsIntersectAction() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction).TypeHandle);
        private void StaticInitializer_36_ChartAutoScrollingMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode).TypeHandle);
        private void StaticInitializer_37_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>).TypeHandle);
        private void StaticInitializer_38_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>).TypeHandle);
        private void StaticInitializer_39_RangeAxisBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.RangeAxisBase).TypeHandle);
        private void StaticInitializer_40_EdgeLabelsVisibilityMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode).TypeHandle);
        private void StaticInitializer_42_ChartLegend() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartLegend).TypeHandle);
        private void StaticInitializer_43_SeriesSelectionBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior).TypeHandle);
        private void StaticInitializer_44_ChartZoomPanBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior).TypeHandle);
        private void StaticInitializer_45_ChartTrackballBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior).TypeHandle);
        private void StaticInitializer_46_ChartCrosshairBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior).TypeHandle);
        private void StaticInitializer_47_Thickness() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Thickness).TypeHandle);
        private void StaticInitializer_48_ChartTooltipBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior).TypeHandle);
        private void StaticInitializer_49_ChartInteractiveBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartInteractiveBehavior).TypeHandle);
        private void StaticInitializer_52_SfSlider() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Sliders.SfSlider).TypeHandle);
        private void StaticInitializer_53_SliderBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Sliders.SliderBase).TypeHandle);
        private void StaticInitializer_54_ThumbType() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Sliders.ThumbType).TypeHandle);
        private void StaticInitializer_55_Placement() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Sliders.Placement).TypeHandle);
        private void StaticInitializer_57_NumericalAxis() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.NumericalAxis).TypeHandle);
        private void StaticInitializer_58_NumericalPadding() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.NumericalPadding).TypeHandle);
        private void StaticInitializer_61_LegendPlacement() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.LegendPlacement).TypeHandle);
        private void StaticInitializer_62_CornerRadius() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.CornerRadius).TypeHandle);
        private void StaticInitializer_64_ScatterSeries() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ScatterSeries).TypeHandle);
        private void StaticInitializer_65_XyDataSeries() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.XyDataSeries).TypeHandle);
        private void StaticInitializer_66_MainWindow() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::EducationSpendings.MainWindow).TypeHandle);
        private void StaticInitializer_68_TreeViewNode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode).TypeHandle);
        private void StaticInitializer_69_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>).TypeHandle);
        private void StaticInitializer_70_DoubleToObjectConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter).TypeHandle);
        private void StaticInitializer_71_DoubleToVisibilityConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter).TypeHandle);
        private void MapAdd_0_XamlControlsResources(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_8_CartesianSeriesCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_9_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_10_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_20_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Media.Brush>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Media.Brush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_29_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)item;
            collection.Add(newItem);
        }
        private void VectorAdd_30_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)item;
            collection.Add(newItem);
        }
        private void VectorAdd_37_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_38_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_69_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.TreeViewNode>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.UI.Xaml.Controls.XamlControlsResources
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary"));
                userType.Activator = Activate_0_XamlControlsResources;
                userType.StaticInitializer = StaticInitializer_0_XamlControlsResources;
                userType.DictionaryAdd = MapAdd_0_XamlControlsResources;
                userType.AddMemberName("UseCompactResources");
                xamlType = userType;
                break;

            case 1:   //  Microsoft.UI.Xaml.ResourceDictionary
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Object
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Boolean
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  EducationSpendings.RoundConverter.RoundConverter
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_RoundConverter;
                userType.StaticInitializer = StaticInitializer_4_RoundConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 5:   //  Syncfusion.UI.Xaml.Charts.SfCartesianChart
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase"));
                userType.Activator = Activate_5_SfCartesianChart;
                userType.StaticInitializer = StaticInitializer_5_SfCartesianChart;
                userType.SetContentPropertyName("Syncfusion.UI.Xaml.Charts.SfCartesianChart.Series");
                userType.AddMemberName("Series");
                userType.AddMemberName("XAxes");
                userType.AddMemberName("YAxes");
                userType.AddMemberName("SelectionBehavior");
                userType.AddMemberName("ZoomPanBehavior");
                userType.AddMemberName("TrackballBehavior");
                userType.AddMemberName("CrosshairBehavior");
                userType.AddMemberName("PaletteBrushes");
                userType.AddMemberName("PlotAreaBorderBrush");
                userType.AddMemberName("PlotAreaBorderThickness");
                userType.AddMemberName("PlotAreaBackground");
                userType.AddMemberName("IsTransposed");
                userType.AddMemberName("EnableSideBySideSeriesPlacement");
                xamlType = userType;
                break;

            case 6:   //  Syncfusion.UI.Xaml.Charts.ChartBase
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.StaticInitializer = StaticInitializer_6_ChartBase;
                userType.AddMemberName("HorizontalHeaderAlignment");
                userType.AddMemberName("Header");
                userType.AddMemberName("Legend");
                userType.AddMemberName("TooltipBehavior");
                userType.AddMemberName("InteractiveBehavior");
                userType.AddMemberName("SeriesClipRect");
                userType.AddMemberName("VerticalHeaderAlignment");
                xamlType = userType;
                break;

            case 7:   //  Microsoft.UI.Xaml.Controls.Control
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>"));
                userType.StaticInitializer = StaticInitializer_8_CartesianSeriesCollection;
                userType.CollectionAdd = VectorAdd_8_CartesianSeriesCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 9:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>"));
                userType.Activator = Activate_9_ObservableCollection;
                userType.StaticInitializer = StaticInitializer_9_ObservableCollection;
                userType.CollectionAdd = VectorAdd_9_ObservableCollection;
                xamlType = userType;
                break;

            case 10:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_Collection;
                userType.StaticInitializer = StaticInitializer_10_Collection;
                userType.CollectionAdd = VectorAdd_10_Collection;
                xamlType = userType;
                break;

            case 11:   //  Syncfusion.UI.Xaml.Charts.CartesianSeries
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries"));
                userType.StaticInitializer = StaticInitializer_11_CartesianSeries;
                userType.AddMemberName("DataLabelSettings");
                userType.AddMemberName("XAxisName");
                userType.AddMemberName("YAxisName");
                userType.AddMemberName("ShowTrackballLabel");
                xamlType = userType;
                break;

            case 12:   //  Syncfusion.UI.Xaml.Charts.ChartSeries
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.StaticInitializer = StaticInitializer_12_ChartSeries;
                userType.AddMemberName("SelectionBehavior");
                userType.AddMemberName("PaletteBrushes");
                userType.AddMemberName("TooltipTemplate");
                userType.AddMemberName("EnableTooltip");
                userType.AddMemberName("ListenPropertyChange");
                userType.AddMemberName("IsSeriesVisible");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("TrackballLabelTemplate");
                userType.AddMemberName("Fill");
                userType.AddMemberName("Label");
                userType.AddMemberName("LegendIcon");
                userType.AddMemberName("LegendIconTemplate");
                userType.AddMemberName("IsVisibleOnLegend");
                userType.AddMemberName("XBindingPath");
                userType.AddMemberName("EnableAnimation");
                userType.AddMemberName("AnimationDuration");
                userType.AddMemberName("Chart");
                userType.AddMemberName("ShowDataLabels");
                userType.AddMemberName("ActualXAxis");
                userType.AddMemberName("ActualYAxis");
                xamlType = userType;
                break;

            case 13:   //  Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings"));
                userType.StaticInitializer = StaticInitializer_13_CartesianDataLabelSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 14:   //  Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_14_ChartDataLabelSettings;
                xamlType = userType;
                break;

            case 15:   //  Microsoft.UI.Xaml.DependencyObject
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  String
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior"));
                userType.StaticInitializer = StaticInitializer_17_DataPointSelectionBehavior;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 18:   //  Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.StaticInitializer = StaticInitializer_18_ChartSelectionBehavior;
                xamlType = userType;
                break;

            case 19:   //  Syncfusion.UI.Xaml.Charts.ChartBehavior
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_19_ChartBehavior;
                xamlType = userType;
                break;

            case 20:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Media.Brush>
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_20_IList;
                userType.CollectionAdd = VectorAdd_20_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 21:   //  Microsoft.UI.Xaml.Media.Brush
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Microsoft.UI.Xaml.DataTemplate
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  Syncfusion.UI.Xaml.Charts.ChartLegendIcon
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_23_ChartLegendIcon;
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.None);
                userType.AddEnumValue("SeriesType", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.SeriesType);
                userType.AddEnumValue("Rectangle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Rectangle);
                userType.AddEnumValue("StraightLine", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.StraightLine);
                userType.AddEnumValue("VerticalLine", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.VerticalLine);
                userType.AddEnumValue("Circle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Circle);
                userType.AddEnumValue("Diamond", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Diamond);
                userType.AddEnumValue("Pentagon", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Pentagon);
                userType.AddEnumValue("Hexagon", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Hexagon);
                userType.AddEnumValue("Triangle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Triangle);
                userType.AddEnumValue("InvertedTriangle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.InvertedTriangle);
                userType.AddEnumValue("Cross", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Cross);
                userType.AddEnumValue("Plus", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Plus);
                xamlType = userType;
                break;

            case 24:   //  System.Enum
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_24_Enum;
                xamlType = userType;
                break;

            case 25:   //  System.ValueType
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_25_ValueType;
                xamlType = userType;
                break;

            case 26:   //  TimeSpan
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_26_TimeSpan;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 27:   //  Syncfusion.UI.Xaml.Charts.ChartAxis
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.StaticInitializer = StaticInitializer_27_ChartAxis;
                userType.AddMemberName("PlotOffsetStart");
                userType.AddMemberName("PlotOffsetEnd");
                userType.AddMemberName("AxisLineOffset");
                userType.AddMemberName("LabelRotation");
                userType.AddMemberName("AxisLineStyle");
                userType.AddMemberName("LabelStyle");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderStyle");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("IsInversed");
                userType.AddMemberName("EdgeLabelsDrawingMode");
                userType.AddMemberName("MajorGridLineStyle");
                userType.AddMemberName("MajorTickStyle");
                userType.AddMemberName("ZoomPosition");
                userType.AddMemberName("ZoomFactor");
                userType.AddMemberName("ShowMajorGridLines");
                userType.AddMemberName("EnableAutoIntervalOnZooming");
                userType.AddMemberName("LabelsIntersectAction");
                userType.AddMemberName("LabelExtent");
                userType.AddMemberName("OpposedPosition");
                userType.AddMemberName("TickLineSize");
                userType.AddMemberName("ShowTrackballLabel");
                userType.AddMemberName("TrackballLabelTemplate");
                userType.AddMemberName("CrosshairLabelTemplate");
                userType.AddMemberName("LabelTemplate");
                userType.AddMemberName("AutoScrollingMode");
                userType.AddMemberName("AutoScrollingDelta");
                userType.AddMemberName("VisibleMinimum");
                userType.AddMemberName("VisibleMaximum");
                xamlType = userType;
                break;

            case 28:   //  Microsoft.UI.Xaml.HorizontalAlignment
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 29:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>"));
                userType.StaticInitializer = StaticInitializer_29_ObservableCollection;
                userType.CollectionAdd = VectorAdd_29_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 30:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_30_Collection;
                userType.StaticInitializer = StaticInitializer_30_Collection;
                userType.CollectionAdd = VectorAdd_30_Collection;
                xamlType = userType;
                break;

            case 31:   //  Double
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  Microsoft.UI.Xaml.Style
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 33:   //  Syncfusion.UI.Xaml.Charts.LabelStyle
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_33_LabelStyle;
                userType.StaticInitializer = StaticInitializer_33_LabelStyle;
                userType.AddMemberName("LabelFormat");
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("FontSize");
                xamlType = userType;
                break;

            case 34:   //  Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_34_EdgeLabelsDrawingMode;
                userType.AddEnumValue("Center", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Center);
                userType.AddEnumValue("Shift", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Shift);
                userType.AddEnumValue("Fit", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Fit);
                userType.AddEnumValue("Hide", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Hide);
                xamlType = userType;
                break;

            case 35:   //  Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_35_AxisLabelsIntersectAction;
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.None);
                userType.AddEnumValue("MultipleRows", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.MultipleRows);
                userType.AddEnumValue("Hide", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.Hide);
                userType.AddEnumValue("Auto", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.Auto);
                userType.AddEnumValue("Wrap", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.Wrap);
                xamlType = userType;
                break;

            case 36:   //  Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_36_ChartAutoScrollingMode;
                userType.AddEnumValue("Start", global::Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode.Start);
                userType.AddEnumValue("End", global::Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode.End);
                xamlType = userType;
                break;

            case 37:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>"));
                userType.StaticInitializer = StaticInitializer_37_ObservableCollection;
                userType.CollectionAdd = VectorAdd_37_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 38:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_38_Collection;
                userType.StaticInitializer = StaticInitializer_38_Collection;
                userType.CollectionAdd = VectorAdd_38_Collection;
                xamlType = userType;
                break;

            case 39:   //  Syncfusion.UI.Xaml.Charts.RangeAxisBase
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis"));
                userType.StaticInitializer = StaticInitializer_39_RangeAxisBase;
                userType.AddMemberName("EdgeLabelsVisibilityMode");
                userType.AddMemberName("MinorTicksPerInterval");
                userType.AddMemberName("MinorTickLineSize");
                userType.AddMemberName("MinorGridLineStyle");
                userType.AddMemberName("MinorTickStyle");
                userType.AddMemberName("ShowMinorGridLines");
                xamlType = userType;
                break;

            case 40:   //  Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_40_EdgeLabelsVisibilityMode;
                userType.AddEnumValue("Default", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.Default);
                userType.AddEnumValue("AlwaysVisible", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.AlwaysVisible);
                userType.AddEnumValue("Visible", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.Visible);
                xamlType = userType;
                break;

            case 41:   //  Int32
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 42:   //  Syncfusion.UI.Xaml.Charts.ChartLegend
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_42_ChartLegend;
                userType.StaticInitializer = StaticInitializer_42_ChartLegend;
                userType.AddMemberName("Placement");
                userType.AddMemberName("ToggleSeriesVisibility");
                userType.AddMemberName("Header");
                userType.AddMemberName("IsVisible");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("ItemMargin");
                userType.AddMemberName("CornerRadius");
                userType.AddMemberName("CheckBoxVisibility");
                userType.AddMemberName("IconVisibility");
                userType.AddMemberName("IconWidth");
                userType.AddMemberName("IconHeight");
                userType.AddMemberName("BorderBrush");
                userType.AddMemberName("Background");
                userType.AddMemberName("BorderThickness");
                userType.AddMemberName("Padding");
                userType.AddMemberName("HorizontalHeaderAlignment");
                userType.AddMemberName("ItemTemplate");
                xamlType = userType;
                break;

            case 43:   //  Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior"));
                userType.StaticInitializer = StaticInitializer_43_SeriesSelectionBehavior;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 44:   //  Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.StaticInitializer = StaticInitializer_44_ChartZoomPanBehavior;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 45:   //  Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.StaticInitializer = StaticInitializer_45_ChartTrackballBehavior;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 46:   //  Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.StaticInitializer = StaticInitializer_46_ChartCrosshairBehavior;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 47:   //  Microsoft.UI.Xaml.Thickness
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_47_Thickness;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 48:   //  Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.StaticInitializer = StaticInitializer_48_ChartTooltipBehavior;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 49:   //  Syncfusion.UI.Xaml.Charts.ChartInteractiveBehavior
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.StaticInitializer = StaticInitializer_49_ChartInteractiveBehavior;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 50:   //  Windows.Foundation.Rect
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 51:   //  Microsoft.UI.Xaml.VerticalAlignment
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 52:   //  Syncfusion.UI.Xaml.Sliders.SfSlider
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase"));
                userType.Activator = Activate_52_SfSlider;
                userType.StaticInitializer = StaticInitializer_52_SfSlider;
                userType.AddMemberName("Value");
                xamlType = userType;
                break;

            case 53:   //  Syncfusion.UI.Xaml.Sliders.SliderBase
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.StaticInitializer = StaticInitializer_53_SliderBase;
                userType.AddMemberName("Minimum");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("MaximumLabelsCount");
                userType.AddMemberName("Interval");
                userType.AddMemberName("ActiveTrackFill");
                userType.AddMemberName("InactiveTrackFill");
                userType.AddMemberName("ThumbOverlayFill");
                userType.AddMemberName("ThumbWidth");
                userType.AddMemberName("ThumbHeight");
                userType.AddMemberName("ThumbBackground");
                userType.AddMemberName("ShowToolTip");
                userType.AddMemberName("StepFrequency");
                userType.AddMemberName("ShowDividers");
                userType.AddMemberName("DividerHeight");
                userType.AddMemberName("DividerWidth");
                userType.AddMemberName("ShowLabels");
                userType.AddMemberName("ActiveTrackHeight");
                userType.AddMemberName("InactiveTrackHeight");
                userType.AddMemberName("ThumbStyle");
                userType.AddMemberName("ActiveTrackStyle");
                userType.AddMemberName("InactiveTrackStyle");
                userType.AddMemberName("ThumbType");
                userType.AddMemberName("ThumbOverlayRadius");
                userType.AddMemberName("MinorTicksPerInterval");
                userType.AddMemberName("ShowTicks");
                userType.AddMemberName("ActiveMajorTickStyle");
                userType.AddMemberName("ActiveMinorTickStyle");
                userType.AddMemberName("MajorTickStyle");
                userType.AddMemberName("MinorTickStyle");
                userType.AddMemberName("MajorTickLength");
                userType.AddMemberName("MinorTickLength");
                userType.AddMemberName("ActiveLabelTemplate");
                userType.AddMemberName("LabelTemplate");
                userType.AddMemberName("TickPlacement");
                userType.AddMemberName("TickOffset");
                userType.AddMemberName("LabelPlacement");
                userType.AddMemberName("LabelOffset");
                userType.AddMemberName("IsInversed");
                userType.AddMemberName("DividerFill");
                userType.AddMemberName("DividerStroke");
                userType.AddMemberName("DividerStrokeThickness");
                userType.AddMemberName("DividerTemplate");
                userType.AddMemberName("ActiveDividerTemplate");
                userType.AddMemberName("ToolTipTemplate");
                userType.AddMemberName("ToolTipFormat");
                userType.AddMemberName("ToolTipStyle");
                userType.AddMemberName("Orientation");
                userType.AddMemberName("DisabledBrush");
                xamlType = userType;
                break;

            case 54:   //  Syncfusion.UI.Xaml.Sliders.ThumbType
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_54_ThumbType;
                userType.AddEnumValue("Circle", global::Syncfusion.UI.Xaml.Sliders.ThumbType.Circle);
                userType.AddEnumValue("Rectangle", global::Syncfusion.UI.Xaml.Sliders.ThumbType.Rectangle);
                userType.AddEnumValue("Diamond", global::Syncfusion.UI.Xaml.Sliders.ThumbType.Diamond);
                xamlType = userType;
                break;

            case 55:   //  Syncfusion.UI.Xaml.Sliders.Placement
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_55_Placement;
                userType.AddEnumValue("After", global::Syncfusion.UI.Xaml.Sliders.Placement.After);
                userType.AddEnumValue("Before", global::Syncfusion.UI.Xaml.Sliders.Placement.Before);
                xamlType = userType;
                break;

            case 56:   //  Microsoft.UI.Xaml.Controls.Orientation
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 57:   //  Syncfusion.UI.Xaml.Charts.NumericalAxis
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase"));
                userType.Activator = Activate_57_NumericalAxis;
                userType.StaticInitializer = StaticInitializer_57_NumericalAxis;
                userType.AddMemberName("Minimum");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("Interval");
                userType.AddMemberName("RangePadding");
                userType.AddMemberName("ActualMinimum");
                userType.AddMemberName("ActualMaximum");
                xamlType = userType;
                break;

            case 58:   //  Syncfusion.UI.Xaml.Charts.NumericalPadding
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_58_NumericalPadding;
                userType.AddEnumValue("Auto", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.Auto);
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.None);
                userType.AddEnumValue("Round", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.Round);
                userType.AddEnumValue("Normal", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.Normal);
                userType.AddEnumValue("Additional", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.Additional);
                userType.AddEnumValue("RoundStart", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.RoundStart);
                userType.AddEnumValue("RoundEnd", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.RoundEnd);
                userType.AddEnumValue("PrependInterval", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.PrependInterval);
                userType.AddEnumValue("AppendInterval", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.AppendInterval);
                xamlType = userType;
                break;

            case 59:   //  Microsoft.UI.Xaml.Media.FontFamily
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 60:   //  Microsoft.UI.Xaml.Media.SolidColorBrush
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 61:   //  Syncfusion.UI.Xaml.Charts.LegendPlacement
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_61_LegendPlacement;
                userType.AddEnumValue("Left", global::Syncfusion.UI.Xaml.Charts.LegendPlacement.Left);
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.Charts.LegendPlacement.Top);
                userType.AddEnumValue("Right", global::Syncfusion.UI.Xaml.Charts.LegendPlacement.Right);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.Charts.LegendPlacement.Bottom);
                xamlType = userType;
                break;

            case 62:   //  Microsoft.UI.Xaml.CornerRadius
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_62_CornerRadius;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 63:   //  Microsoft.UI.Xaml.Visibility
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 64:   //  Syncfusion.UI.Xaml.Charts.ScatterSeries
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.XyDataSeries"));
                userType.Activator = Activate_64_ScatterSeries;
                userType.StaticInitializer = StaticInitializer_64_ScatterSeries;
                userType.AddMemberName("PointHeight");
                userType.AddMemberName("PointWidth");
                userType.AddMemberName("CustomTemplate");
                userType.AddMemberName("Stroke");
                xamlType = userType;
                break;

            case 65:   //  Syncfusion.UI.Xaml.Charts.XyDataSeries
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianSeries"));
                userType.StaticInitializer = StaticInitializer_65_XyDataSeries;
                userType.AddMemberName("YBindingPath");
                userType.AddMemberName("StrokeWidth");
                xamlType = userType;
                break;

            case 66:   //  EducationSpendings.MainWindow
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_66_MainWindow;
                userType.StaticInitializer = StaticInitializer_66_MainWindow;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 67:   //  Microsoft.UI.Xaml.Window
                xamlType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 68:   //  Microsoft.UI.Xaml.Controls.TreeViewNode
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_68_TreeViewNode;
                userType.StaticInitializer = StaticInitializer_68_TreeViewNode;
                userType.AddMemberName("Children");
                userType.AddMemberName("Content");
                userType.AddMemberName("Depth");
                userType.AddMemberName("HasChildren");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Parent");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 69:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_69_IList;
                userType.CollectionAdd = VectorAdd_69_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 70:   //  Syncfusion.UI.Xaml.Core.DoubleToObjectConverter
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_70_DoubleToObjectConverter;
                userType.StaticInitializer = StaticInitializer_70_DoubleToObjectConverter;
                userType.AddMemberName("TrueValue");
                userType.AddMemberName("FalseValue");
                userType.AddMemberName("NullValue");
                userType.AddMemberName("GreaterThan");
                userType.AddMemberName("LessThan");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 71:   //  Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter
                userType = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter"));
                userType.Activator = Activate_71_DoubleToVisibilityConverter;
                userType.StaticInitializer = StaticInitializer_71_DoubleToVisibilityConverter;
                userType.SetIsBindable();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.Chart.WinUI.Syncfusion_Chart_WinUI_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.Core.WinUI.Syncfusion_Core_WinUI_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Sliders.Syncfusion_Sliders_WinUI_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_XamlControlsResources_UseCompactResources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            return that.UseCompactResources;
        }
        private void set_0_XamlControlsResources_UseCompactResources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            that.UseCompactResources = (global::System.Boolean)Value;
        }
        private object get_1_SfCartesianChart_Series(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.Series;
        }
        private void set_1_SfCartesianChart_Series(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.Series = (global::Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection)Value;
        }
        private object get_2_CartesianSeries_DataLabelSettings(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            return that.DataLabelSettings;
        }
        private void set_2_CartesianSeries_DataLabelSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            that.DataLabelSettings = (global::Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings)Value;
        }
        private object get_3_CartesianSeries_XAxisName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            return that.XAxisName;
        }
        private void set_3_CartesianSeries_XAxisName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            that.XAxisName = (global::System.String)Value;
        }
        private object get_4_CartesianSeries_YAxisName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            return that.YAxisName;
        }
        private void set_4_CartesianSeries_YAxisName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            that.YAxisName = (global::System.String)Value;
        }
        private object get_5_CartesianSeries_ShowTrackballLabel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            return that.ShowTrackballLabel;
        }
        private void set_5_CartesianSeries_ShowTrackballLabel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            that.ShowTrackballLabel = (global::System.Boolean)Value;
        }
        private object get_6_ChartSeries_SelectionBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.SelectionBehavior;
        }
        private void set_6_ChartSeries_SelectionBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.SelectionBehavior = (global::Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior)Value;
        }
        private object get_7_ChartSeries_PaletteBrushes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.PaletteBrushes;
        }
        private void set_7_ChartSeries_PaletteBrushes(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.PaletteBrushes = (global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Brush>)Value;
        }
        private object get_8_ChartSeries_TooltipTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.TooltipTemplate;
        }
        private void set_8_ChartSeries_TooltipTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.TooltipTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_9_ChartSeries_EnableTooltip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.EnableTooltip;
        }
        private void set_9_ChartSeries_EnableTooltip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.EnableTooltip = (global::System.Boolean)Value;
        }
        private object get_10_ChartSeries_ListenPropertyChange(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.ListenPropertyChange;
        }
        private void set_10_ChartSeries_ListenPropertyChange(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.ListenPropertyChange = (global::System.Boolean)Value;
        }
        private object get_11_ChartSeries_IsSeriesVisible(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.IsSeriesVisible;
        }
        private void set_11_ChartSeries_IsSeriesVisible(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.IsSeriesVisible = (global::System.Boolean)Value;
        }
        private object get_12_ChartSeries_ItemsSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.ItemsSource;
        }
        private void set_12_ChartSeries_ItemsSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_13_ChartSeries_TrackballLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.TrackballLabelTemplate;
        }
        private void set_13_ChartSeries_TrackballLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.TrackballLabelTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_14_ChartSeries_Fill(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.Fill;
        }
        private void set_14_ChartSeries_Fill(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.Fill = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_15_ChartSeries_Label(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.Label;
        }
        private void set_15_ChartSeries_Label(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.Label = (global::System.String)Value;
        }
        private object get_16_ChartSeries_LegendIcon(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.LegendIcon;
        }
        private void set_16_ChartSeries_LegendIcon(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.LegendIcon = (global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon)Value;
        }
        private object get_17_ChartSeries_LegendIconTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.LegendIconTemplate;
        }
        private void set_17_ChartSeries_LegendIconTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.LegendIconTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_18_ChartSeries_IsVisibleOnLegend(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.IsVisibleOnLegend;
        }
        private void set_18_ChartSeries_IsVisibleOnLegend(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.IsVisibleOnLegend = (global::System.Boolean)Value;
        }
        private object get_19_ChartSeries_XBindingPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.XBindingPath;
        }
        private void set_19_ChartSeries_XBindingPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.XBindingPath = (global::System.String)Value;
        }
        private object get_20_ChartSeries_EnableAnimation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.EnableAnimation;
        }
        private void set_20_ChartSeries_EnableAnimation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.EnableAnimation = (global::System.Boolean)Value;
        }
        private object get_21_ChartSeries_AnimationDuration(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.AnimationDuration;
        }
        private void set_21_ChartSeries_AnimationDuration(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.AnimationDuration = (global::System.TimeSpan)Value;
        }
        private object get_22_ChartSeries_Chart(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.Chart;
        }
        private object get_23_ChartSeries_ShowDataLabels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.ShowDataLabels;
        }
        private void set_23_ChartSeries_ShowDataLabels(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.ShowDataLabels = (global::System.Boolean)Value;
        }
        private object get_24_ChartSeries_ActualXAxis(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.ActualXAxis;
        }
        private object get_25_ChartSeries_ActualYAxis(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.ActualYAxis;
        }
        private object get_26_ChartBase_HorizontalHeaderAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.HorizontalHeaderAlignment;
        }
        private void set_26_ChartBase_HorizontalHeaderAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.HorizontalHeaderAlignment = (global::Microsoft.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_27_ChartBase_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.Header;
        }
        private void set_27_ChartBase_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_28_SfCartesianChart_XAxes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.XAxes;
        }
        private object get_29_ChartAxis_PlotOffsetStart(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.PlotOffsetStart;
        }
        private void set_29_ChartAxis_PlotOffsetStart(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.PlotOffsetStart = (global::System.Double)Value;
        }
        private object get_30_ChartAxis_PlotOffsetEnd(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.PlotOffsetEnd;
        }
        private void set_30_ChartAxis_PlotOffsetEnd(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.PlotOffsetEnd = (global::System.Double)Value;
        }
        private object get_31_ChartAxis_AxisLineOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.AxisLineOffset;
        }
        private void set_31_ChartAxis_AxisLineOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.AxisLineOffset = (global::System.Double)Value;
        }
        private object get_32_ChartAxis_LabelRotation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelRotation;
        }
        private void set_32_ChartAxis_LabelRotation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelRotation = (global::System.Double)Value;
        }
        private object get_33_ChartAxis_AxisLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.AxisLineStyle;
        }
        private void set_33_ChartAxis_AxisLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.AxisLineStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_34_ChartAxis_LabelStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelStyle;
        }
        private void set_34_ChartAxis_LabelStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelStyle = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)Value;
        }
        private object get_35_ChartAxis_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.Header;
        }
        private void set_35_ChartAxis_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_36_ChartAxis_HeaderStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.HeaderStyle;
        }
        private void set_36_ChartAxis_HeaderStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.HeaderStyle = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)Value;
        }
        private object get_37_ChartAxis_HeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.HeaderTemplate;
        }
        private void set_37_ChartAxis_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_38_ChartAxis_IsInversed(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.IsInversed;
        }
        private void set_38_ChartAxis_IsInversed(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.IsInversed = (global::System.Boolean)Value;
        }
        private object get_39_ChartAxis_EdgeLabelsDrawingMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.EdgeLabelsDrawingMode;
        }
        private void set_39_ChartAxis_EdgeLabelsDrawingMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.EdgeLabelsDrawingMode = (global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode)Value;
        }
        private object get_40_ChartAxis_MajorGridLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.MajorGridLineStyle;
        }
        private void set_40_ChartAxis_MajorGridLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.MajorGridLineStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_41_ChartAxis_MajorTickStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.MajorTickStyle;
        }
        private void set_41_ChartAxis_MajorTickStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.MajorTickStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_42_ChartAxis_ZoomPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ZoomPosition;
        }
        private void set_42_ChartAxis_ZoomPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ZoomPosition = (global::System.Double)Value;
        }
        private object get_43_ChartAxis_ZoomFactor(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ZoomFactor;
        }
        private void set_43_ChartAxis_ZoomFactor(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ZoomFactor = (global::System.Double)Value;
        }
        private object get_44_ChartAxis_ShowMajorGridLines(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ShowMajorGridLines;
        }
        private void set_44_ChartAxis_ShowMajorGridLines(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ShowMajorGridLines = (global::System.Boolean)Value;
        }
        private object get_45_ChartAxis_EnableAutoIntervalOnZooming(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.EnableAutoIntervalOnZooming;
        }
        private void set_45_ChartAxis_EnableAutoIntervalOnZooming(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.EnableAutoIntervalOnZooming = (global::System.Boolean)Value;
        }
        private object get_46_ChartAxis_LabelsIntersectAction(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelsIntersectAction;
        }
        private void set_46_ChartAxis_LabelsIntersectAction(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelsIntersectAction = (global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction)Value;
        }
        private object get_47_ChartAxis_LabelExtent(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelExtent;
        }
        private void set_47_ChartAxis_LabelExtent(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelExtent = (global::System.Double)Value;
        }
        private object get_48_ChartAxis_OpposedPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.OpposedPosition;
        }
        private void set_48_ChartAxis_OpposedPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.OpposedPosition = (global::System.Boolean)Value;
        }
        private object get_49_ChartAxis_TickLineSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.TickLineSize;
        }
        private void set_49_ChartAxis_TickLineSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.TickLineSize = (global::System.Double)Value;
        }
        private object get_50_ChartAxis_ShowTrackballLabel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ShowTrackballLabel;
        }
        private void set_50_ChartAxis_ShowTrackballLabel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ShowTrackballLabel = (global::System.Boolean)Value;
        }
        private object get_51_ChartAxis_TrackballLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.TrackballLabelTemplate;
        }
        private void set_51_ChartAxis_TrackballLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.TrackballLabelTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_52_ChartAxis_CrosshairLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.CrosshairLabelTemplate;
        }
        private void set_52_ChartAxis_CrosshairLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.CrosshairLabelTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_53_ChartAxis_LabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelTemplate;
        }
        private void set_53_ChartAxis_LabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_54_ChartAxis_AutoScrollingMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.AutoScrollingMode;
        }
        private void set_54_ChartAxis_AutoScrollingMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.AutoScrollingMode = (global::Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode)Value;
        }
        private object get_55_ChartAxis_AutoScrollingDelta(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.AutoScrollingDelta;
        }
        private void set_55_ChartAxis_AutoScrollingDelta(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.AutoScrollingDelta = (global::System.Double)Value;
        }
        private object get_56_ChartAxis_VisibleMinimum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.VisibleMinimum;
        }
        private object get_57_ChartAxis_VisibleMaximum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.VisibleMaximum;
        }
        private object get_58_SfCartesianChart_YAxes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.YAxes;
        }
        private object get_59_RangeAxisBase_EdgeLabelsVisibilityMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.EdgeLabelsVisibilityMode;
        }
        private void set_59_RangeAxisBase_EdgeLabelsVisibilityMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.EdgeLabelsVisibilityMode = (global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode)Value;
        }
        private object get_60_RangeAxisBase_MinorTicksPerInterval(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.MinorTicksPerInterval;
        }
        private void set_60_RangeAxisBase_MinorTicksPerInterval(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.MinorTicksPerInterval = (global::System.Int32)Value;
        }
        private object get_61_RangeAxisBase_MinorTickLineSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.MinorTickLineSize;
        }
        private void set_61_RangeAxisBase_MinorTickLineSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.MinorTickLineSize = (global::System.Double)Value;
        }
        private object get_62_RangeAxisBase_MinorGridLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.MinorGridLineStyle;
        }
        private void set_62_RangeAxisBase_MinorGridLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.MinorGridLineStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_63_RangeAxisBase_MinorTickStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.MinorTickStyle;
        }
        private void set_63_RangeAxisBase_MinorTickStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.MinorTickStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_64_RangeAxisBase_ShowMinorGridLines(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.ShowMinorGridLines;
        }
        private void set_64_RangeAxisBase_ShowMinorGridLines(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.ShowMinorGridLines = (global::System.Boolean)Value;
        }
        private object get_65_ChartBase_Legend(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.Legend;
        }
        private void set_65_ChartBase_Legend(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.Legend = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)Value;
        }
        private object get_66_SfCartesianChart_SelectionBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.SelectionBehavior;
        }
        private void set_66_SfCartesianChart_SelectionBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.SelectionBehavior = (global::Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior)Value;
        }
        private object get_67_SfCartesianChart_ZoomPanBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.ZoomPanBehavior;
        }
        private void set_67_SfCartesianChart_ZoomPanBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.ZoomPanBehavior = (global::Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior)Value;
        }
        private object get_68_SfCartesianChart_TrackballBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.TrackballBehavior;
        }
        private void set_68_SfCartesianChart_TrackballBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.TrackballBehavior = (global::Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior)Value;
        }
        private object get_69_SfCartesianChart_CrosshairBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.CrosshairBehavior;
        }
        private void set_69_SfCartesianChart_CrosshairBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.CrosshairBehavior = (global::Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior)Value;
        }
        private object get_70_SfCartesianChart_PaletteBrushes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.PaletteBrushes;
        }
        private void set_70_SfCartesianChart_PaletteBrushes(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.PaletteBrushes = (global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Brush>)Value;
        }
        private object get_71_SfCartesianChart_PlotAreaBorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.PlotAreaBorderBrush;
        }
        private void set_71_SfCartesianChart_PlotAreaBorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.PlotAreaBorderBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_72_SfCartesianChart_PlotAreaBorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.PlotAreaBorderThickness;
        }
        private void set_72_SfCartesianChart_PlotAreaBorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.PlotAreaBorderThickness = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_73_SfCartesianChart_PlotAreaBackground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.PlotAreaBackground;
        }
        private void set_73_SfCartesianChart_PlotAreaBackground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.PlotAreaBackground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_74_SfCartesianChart_IsTransposed(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.IsTransposed;
        }
        private void set_74_SfCartesianChart_IsTransposed(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.IsTransposed = (global::System.Boolean)Value;
        }
        private object get_75_SfCartesianChart_EnableSideBySideSeriesPlacement(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.EnableSideBySideSeriesPlacement;
        }
        private void set_75_SfCartesianChart_EnableSideBySideSeriesPlacement(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.EnableSideBySideSeriesPlacement = (global::System.Boolean)Value;
        }
        private object get_76_ChartBase_TooltipBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.TooltipBehavior;
        }
        private void set_76_ChartBase_TooltipBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.TooltipBehavior = (global::Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior)Value;
        }
        private object get_77_ChartBase_InteractiveBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.InteractiveBehavior;
        }
        private void set_77_ChartBase_InteractiveBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.InteractiveBehavior = (global::Syncfusion.UI.Xaml.Charts.ChartInteractiveBehavior)Value;
        }
        private object get_78_ChartBase_SeriesClipRect(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.SeriesClipRect;
        }
        private object get_79_ChartBase_VerticalHeaderAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.VerticalHeaderAlignment;
        }
        private void set_79_ChartBase_VerticalHeaderAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.VerticalHeaderAlignment = (global::Microsoft.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_80_SliderBase_Minimum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.Minimum;
        }
        private void set_80_SliderBase_Minimum(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_81_SliderBase_Maximum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.Maximum;
        }
        private void set_81_SliderBase_Maximum(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_82_SliderBase_MaximumLabelsCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.MaximumLabelsCount;
        }
        private void set_82_SliderBase_MaximumLabelsCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.MaximumLabelsCount = (global::System.Int32)Value;
        }
        private object get_83_SliderBase_Interval(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.Interval;
        }
        private void set_83_SliderBase_Interval(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.Interval = (global::System.Double)Value;
        }
        private object get_84_SliderBase_ActiveTrackFill(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ActiveTrackFill;
        }
        private void set_84_SliderBase_ActiveTrackFill(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ActiveTrackFill = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_85_SliderBase_InactiveTrackFill(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.InactiveTrackFill;
        }
        private void set_85_SliderBase_InactiveTrackFill(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.InactiveTrackFill = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_86_SliderBase_ThumbOverlayFill(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ThumbOverlayFill;
        }
        private void set_86_SliderBase_ThumbOverlayFill(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ThumbOverlayFill = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_87_SliderBase_ThumbWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ThumbWidth;
        }
        private void set_87_SliderBase_ThumbWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ThumbWidth = (global::System.Double)Value;
        }
        private object get_88_SliderBase_ThumbHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ThumbHeight;
        }
        private void set_88_SliderBase_ThumbHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ThumbHeight = (global::System.Double)Value;
        }
        private object get_89_SliderBase_ThumbBackground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ThumbBackground;
        }
        private void set_89_SliderBase_ThumbBackground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ThumbBackground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_90_SfSlider_Value(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SfSlider)instance;
            return that.Value;
        }
        private void set_90_SfSlider_Value(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SfSlider)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_91_SliderBase_ShowToolTip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ShowToolTip;
        }
        private void set_91_SliderBase_ShowToolTip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ShowToolTip = (global::System.Boolean)Value;
        }
        private object get_92_SliderBase_StepFrequency(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.StepFrequency;
        }
        private void set_92_SliderBase_StepFrequency(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.StepFrequency = (global::System.Double)Value;
        }
        private object get_93_SliderBase_ShowDividers(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ShowDividers;
        }
        private void set_93_SliderBase_ShowDividers(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ShowDividers = (global::System.Boolean)Value;
        }
        private object get_94_SliderBase_DividerHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.DividerHeight;
        }
        private void set_94_SliderBase_DividerHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.DividerHeight = (global::System.Double)Value;
        }
        private object get_95_SliderBase_DividerWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.DividerWidth;
        }
        private void set_95_SliderBase_DividerWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.DividerWidth = (global::System.Double)Value;
        }
        private object get_96_SliderBase_ShowLabels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ShowLabels;
        }
        private void set_96_SliderBase_ShowLabels(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ShowLabels = (global::System.Boolean)Value;
        }
        private object get_97_SliderBase_ActiveTrackHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ActiveTrackHeight;
        }
        private void set_97_SliderBase_ActiveTrackHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ActiveTrackHeight = (global::System.Double)Value;
        }
        private object get_98_SliderBase_InactiveTrackHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.InactiveTrackHeight;
        }
        private void set_98_SliderBase_InactiveTrackHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.InactiveTrackHeight = (global::System.Double)Value;
        }
        private object get_99_SliderBase_ThumbStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ThumbStyle;
        }
        private void set_99_SliderBase_ThumbStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ThumbStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_100_SliderBase_ActiveTrackStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ActiveTrackStyle;
        }
        private void set_100_SliderBase_ActiveTrackStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ActiveTrackStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_101_SliderBase_InactiveTrackStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.InactiveTrackStyle;
        }
        private void set_101_SliderBase_InactiveTrackStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.InactiveTrackStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_102_SliderBase_ThumbType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ThumbType;
        }
        private void set_102_SliderBase_ThumbType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ThumbType = (global::Syncfusion.UI.Xaml.Sliders.ThumbType)Value;
        }
        private object get_103_SliderBase_ThumbOverlayRadius(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ThumbOverlayRadius;
        }
        private void set_103_SliderBase_ThumbOverlayRadius(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ThumbOverlayRadius = (global::System.Double)Value;
        }
        private object get_104_SliderBase_MinorTicksPerInterval(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.MinorTicksPerInterval;
        }
        private void set_104_SliderBase_MinorTicksPerInterval(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.MinorTicksPerInterval = (global::System.Double)Value;
        }
        private object get_105_SliderBase_ShowTicks(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ShowTicks;
        }
        private void set_105_SliderBase_ShowTicks(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ShowTicks = (global::System.Boolean)Value;
        }
        private object get_106_SliderBase_ActiveMajorTickStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ActiveMajorTickStyle;
        }
        private void set_106_SliderBase_ActiveMajorTickStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ActiveMajorTickStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_107_SliderBase_ActiveMinorTickStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ActiveMinorTickStyle;
        }
        private void set_107_SliderBase_ActiveMinorTickStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ActiveMinorTickStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_108_SliderBase_MajorTickStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.MajorTickStyle;
        }
        private void set_108_SliderBase_MajorTickStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.MajorTickStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_109_SliderBase_MinorTickStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.MinorTickStyle;
        }
        private void set_109_SliderBase_MinorTickStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.MinorTickStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_110_SliderBase_MajorTickLength(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.MajorTickLength;
        }
        private void set_110_SliderBase_MajorTickLength(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.MajorTickLength = (global::System.Double)Value;
        }
        private object get_111_SliderBase_MinorTickLength(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.MinorTickLength;
        }
        private void set_111_SliderBase_MinorTickLength(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.MinorTickLength = (global::System.Double)Value;
        }
        private object get_112_SliderBase_ActiveLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ActiveLabelTemplate;
        }
        private void set_112_SliderBase_ActiveLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ActiveLabelTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_113_SliderBase_LabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.LabelTemplate;
        }
        private void set_113_SliderBase_LabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.LabelTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_114_SliderBase_TickPlacement(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.TickPlacement;
        }
        private void set_114_SliderBase_TickPlacement(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.TickPlacement = (global::Syncfusion.UI.Xaml.Sliders.Placement)Value;
        }
        private object get_115_SliderBase_TickOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.TickOffset;
        }
        private void set_115_SliderBase_TickOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.TickOffset = (global::System.Double)Value;
        }
        private object get_116_SliderBase_LabelPlacement(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.LabelPlacement;
        }
        private void set_116_SliderBase_LabelPlacement(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.LabelPlacement = (global::Syncfusion.UI.Xaml.Sliders.Placement)Value;
        }
        private object get_117_SliderBase_LabelOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.LabelOffset;
        }
        private void set_117_SliderBase_LabelOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.LabelOffset = (global::System.Double)Value;
        }
        private object get_118_SliderBase_IsInversed(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.IsInversed;
        }
        private void set_118_SliderBase_IsInversed(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.IsInversed = (global::System.Boolean)Value;
        }
        private object get_119_SliderBase_DividerFill(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.DividerFill;
        }
        private void set_119_SliderBase_DividerFill(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.DividerFill = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_120_SliderBase_DividerStroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.DividerStroke;
        }
        private void set_120_SliderBase_DividerStroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.DividerStroke = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_121_SliderBase_DividerStrokeThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.DividerStrokeThickness;
        }
        private void set_121_SliderBase_DividerStrokeThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.DividerStrokeThickness = (global::System.Double)Value;
        }
        private object get_122_SliderBase_DividerTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.DividerTemplate;
        }
        private void set_122_SliderBase_DividerTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.DividerTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_123_SliderBase_ActiveDividerTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ActiveDividerTemplate;
        }
        private void set_123_SliderBase_ActiveDividerTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ActiveDividerTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_124_SliderBase_ToolTipTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ToolTipTemplate;
        }
        private void set_124_SliderBase_ToolTipTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ToolTipTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_125_SliderBase_ToolTipFormat(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ToolTipFormat;
        }
        private void set_125_SliderBase_ToolTipFormat(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ToolTipFormat = (global::System.String)Value;
        }
        private object get_126_SliderBase_ToolTipStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.ToolTipStyle;
        }
        private void set_126_SliderBase_ToolTipStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.ToolTipStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_127_SliderBase_Orientation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.Orientation;
        }
        private void set_127_SliderBase_Orientation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.Orientation = (global::Microsoft.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_128_SliderBase_DisabledBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            return that.DisabledBrush;
        }
        private void set_128_SliderBase_DisabledBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Sliders.SliderBase)instance;
            that.DisabledBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_129_NumericalAxis_Minimum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.Minimum;
        }
        private void set_129_NumericalAxis_Minimum(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_130_NumericalAxis_Maximum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.Maximum;
        }
        private void set_130_NumericalAxis_Maximum(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_131_NumericalAxis_Interval(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.Interval;
        }
        private void set_131_NumericalAxis_Interval(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            that.Interval = (global::System.Double)Value;
        }
        private object get_132_NumericalAxis_RangePadding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.RangePadding;
        }
        private void set_132_NumericalAxis_RangePadding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            that.RangePadding = (global::Syncfusion.UI.Xaml.Charts.NumericalPadding)Value;
        }
        private object get_133_NumericalAxis_ActualMinimum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.ActualMinimum;
        }
        private object get_134_NumericalAxis_ActualMaximum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.ActualMaximum;
        }
        private object get_135_LabelStyle_LabelFormat(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)instance;
            return that.LabelFormat;
        }
        private void set_135_LabelStyle_LabelFormat(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)instance;
            that.LabelFormat = (global::System.String)Value;
        }
        private object get_136_LabelStyle_FontFamily(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)instance;
            return that.FontFamily;
        }
        private void set_136_LabelStyle_FontFamily(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)instance;
            that.FontFamily = (global::Microsoft.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_137_LabelStyle_Foreground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)instance;
            return that.Foreground;
        }
        private void set_137_LabelStyle_Foreground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)instance;
            that.Foreground = (global::Microsoft.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_138_LabelStyle_FontSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)instance;
            return that.FontSize;
        }
        private void set_138_LabelStyle_FontSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_139_ChartLegend_Placement(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.Placement;
        }
        private void set_139_ChartLegend_Placement(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.Placement = (global::Syncfusion.UI.Xaml.Charts.LegendPlacement)Value;
        }
        private object get_140_ChartLegend_ToggleSeriesVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.ToggleSeriesVisibility;
        }
        private void set_140_ChartLegend_ToggleSeriesVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.ToggleSeriesVisibility = (global::System.Boolean)Value;
        }
        private object get_141_ChartLegend_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.Header;
        }
        private void set_141_ChartLegend_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_142_ChartLegend_IsVisible(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.IsVisible;
        }
        private void set_142_ChartLegend_IsVisible(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.IsVisible = (global::System.Boolean)Value;
        }
        private object get_143_ChartLegend_HeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.HeaderTemplate;
        }
        private void set_143_ChartLegend_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_144_ChartLegend_ItemMargin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.ItemMargin;
        }
        private void set_144_ChartLegend_ItemMargin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.ItemMargin = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_145_ChartLegend_CornerRadius(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.CornerRadius;
        }
        private void set_145_ChartLegend_CornerRadius(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.CornerRadius = (global::Microsoft.UI.Xaml.CornerRadius)Value;
        }
        private object get_146_ChartLegend_CheckBoxVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.CheckBoxVisibility;
        }
        private void set_146_ChartLegend_CheckBoxVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.CheckBoxVisibility = (global::Microsoft.UI.Xaml.Visibility)Value;
        }
        private object get_147_ChartLegend_IconVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.IconVisibility;
        }
        private void set_147_ChartLegend_IconVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.IconVisibility = (global::Microsoft.UI.Xaml.Visibility)Value;
        }
        private object get_148_ChartLegend_IconWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.IconWidth;
        }
        private void set_148_ChartLegend_IconWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.IconWidth = (global::System.Double)Value;
        }
        private object get_149_ChartLegend_IconHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.IconHeight;
        }
        private void set_149_ChartLegend_IconHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.IconHeight = (global::System.Double)Value;
        }
        private object get_150_ChartLegend_BorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.BorderBrush;
        }
        private void set_150_ChartLegend_BorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.BorderBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_151_ChartLegend_Background(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.Background;
        }
        private void set_151_ChartLegend_Background(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.Background = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_152_ChartLegend_BorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.BorderThickness;
        }
        private void set_152_ChartLegend_BorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.BorderThickness = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_153_ChartLegend_Padding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.Padding;
        }
        private void set_153_ChartLegend_Padding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.Padding = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_154_ChartLegend_HorizontalHeaderAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.HorizontalHeaderAlignment;
        }
        private void set_154_ChartLegend_HorizontalHeaderAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.HorizontalHeaderAlignment = (global::Microsoft.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_155_ChartLegend_ItemTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.ItemTemplate;
        }
        private void set_155_ChartLegend_ItemTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.ItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_156_XyDataSeries_YBindingPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.XyDataSeries)instance;
            return that.YBindingPath;
        }
        private void set_156_XyDataSeries_YBindingPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.XyDataSeries)instance;
            that.YBindingPath = (global::System.String)Value;
        }
        private object get_157_ScatterSeries_PointHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ScatterSeries)instance;
            return that.PointHeight;
        }
        private void set_157_ScatterSeries_PointHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ScatterSeries)instance;
            that.PointHeight = (global::System.Double)Value;
        }
        private object get_158_ScatterSeries_PointWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ScatterSeries)instance;
            return that.PointWidth;
        }
        private void set_158_ScatterSeries_PointWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ScatterSeries)instance;
            that.PointWidth = (global::System.Double)Value;
        }
        private object get_159_ScatterSeries_CustomTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ScatterSeries)instance;
            return that.CustomTemplate;
        }
        private void set_159_ScatterSeries_CustomTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ScatterSeries)instance;
            that.CustomTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_160_ScatterSeries_Stroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ScatterSeries)instance;
            return that.Stroke;
        }
        private void set_160_ScatterSeries_Stroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ScatterSeries)instance;
            that.Stroke = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_161_XyDataSeries_StrokeWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.XyDataSeries)instance;
            return that.StrokeWidth;
        }
        private void set_161_XyDataSeries_StrokeWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.XyDataSeries)instance;
            that.StrokeWidth = (global::System.Double)Value;
        }
        private object get_162_TreeViewNode_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Children;
        }
        private object get_163_TreeViewNode_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Content;
        }
        private void set_163_TreeViewNode_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_164_TreeViewNode_Depth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Depth;
        }
        private object get_165_TreeViewNode_HasChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasChildren;
        }
        private object get_166_TreeViewNode_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_166_TreeViewNode_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_167_TreeViewNode_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.IsExpanded;
        }
        private void set_167_TreeViewNode_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_168_TreeViewNode_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Parent;
        }
        private object get_169_DoubleToObjectConverter_TrueValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.TrueValue;
        }
        private void set_169_DoubleToObjectConverter_TrueValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.TrueValue = (global::System.Object)Value;
        }
        private object get_170_DoubleToObjectConverter_FalseValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.FalseValue;
        }
        private void set_170_DoubleToObjectConverter_FalseValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.FalseValue = (global::System.Object)Value;
        }
        private object get_171_DoubleToObjectConverter_NullValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.NullValue;
        }
        private void set_171_DoubleToObjectConverter_NullValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.NullValue = (global::System.Object)Value;
        }
        private object get_172_DoubleToObjectConverter_GreaterThan(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.GreaterThan;
        }
        private void set_172_DoubleToObjectConverter_GreaterThan(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.GreaterThan = (global::System.Double)Value;
        }
        private object get_173_DoubleToObjectConverter_LessThan(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.LessThan;
        }
        private void set_173_DoubleToObjectConverter_LessThan(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.LessThan = (global::System.Double)Value;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember xamlMember = null;
            global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResources":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.XamlControlsResources");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "UseCompactResources", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_XamlControlsResources_UseCompactResources;
                xamlMember.Setter = set_0_XamlControlsResources_UseCompactResources;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.Series":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Series", "Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_SfCartesianChart_Series;
                xamlMember.Setter = set_1_SfCartesianChart_Series;
                break;
            case "Syncfusion.UI.Xaml.Charts.CartesianSeries.DataLabelSettings":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "DataLabelSettings", "Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_CartesianSeries_DataLabelSettings;
                xamlMember.Setter = set_2_CartesianSeries_DataLabelSettings;
                break;
            case "Syncfusion.UI.Xaml.Charts.CartesianSeries.XAxisName":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "XAxisName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_CartesianSeries_XAxisName;
                xamlMember.Setter = set_3_CartesianSeries_XAxisName;
                break;
            case "Syncfusion.UI.Xaml.Charts.CartesianSeries.YAxisName":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "YAxisName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_CartesianSeries_YAxisName;
                xamlMember.Setter = set_4_CartesianSeries_YAxisName;
                break;
            case "Syncfusion.UI.Xaml.Charts.CartesianSeries.ShowTrackballLabel":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ShowTrackballLabel", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_CartesianSeries_ShowTrackballLabel;
                xamlMember.Setter = set_5_CartesianSeries_ShowTrackballLabel;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.SelectionBehavior":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "SelectionBehavior", "Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_ChartSeries_SelectionBehavior;
                xamlMember.Setter = set_6_ChartSeries_SelectionBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.PaletteBrushes":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "PaletteBrushes", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Media.Brush>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_ChartSeries_PaletteBrushes;
                xamlMember.Setter = set_7_ChartSeries_PaletteBrushes;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.TooltipTemplate":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "TooltipTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_ChartSeries_TooltipTemplate;
                xamlMember.Setter = set_8_ChartSeries_TooltipTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.EnableTooltip":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "EnableTooltip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_ChartSeries_EnableTooltip;
                xamlMember.Setter = set_9_ChartSeries_EnableTooltip;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.ListenPropertyChange":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ListenPropertyChange", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_ChartSeries_ListenPropertyChange;
                xamlMember.Setter = set_10_ChartSeries_ListenPropertyChange;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.IsSeriesVisible":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "IsSeriesVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_ChartSeries_IsSeriesVisible;
                xamlMember.Setter = set_11_ChartSeries_IsSeriesVisible;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.ItemsSource":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_ChartSeries_ItemsSource;
                xamlMember.Setter = set_12_ChartSeries_ItemsSource;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.TrackballLabelTemplate":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "TrackballLabelTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_ChartSeries_TrackballLabelTemplate;
                xamlMember.Setter = set_13_ChartSeries_TrackballLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.Fill":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Fill", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_ChartSeries_Fill;
                xamlMember.Setter = set_14_ChartSeries_Fill;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.Label":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Label", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_ChartSeries_Label;
                xamlMember.Setter = set_15_ChartSeries_Label;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.LegendIcon":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "LegendIcon", "Syncfusion.UI.Xaml.Charts.ChartLegendIcon");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_ChartSeries_LegendIcon;
                xamlMember.Setter = set_16_ChartSeries_LegendIcon;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.LegendIconTemplate":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "LegendIconTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_ChartSeries_LegendIconTemplate;
                xamlMember.Setter = set_17_ChartSeries_LegendIconTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.IsVisibleOnLegend":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "IsVisibleOnLegend", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_ChartSeries_IsVisibleOnLegend;
                xamlMember.Setter = set_18_ChartSeries_IsVisibleOnLegend;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.XBindingPath":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "XBindingPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_ChartSeries_XBindingPath;
                xamlMember.Setter = set_19_ChartSeries_XBindingPath;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.EnableAnimation":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "EnableAnimation", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_ChartSeries_EnableAnimation;
                xamlMember.Setter = set_20_ChartSeries_EnableAnimation;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.AnimationDuration":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "AnimationDuration", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_ChartSeries_AnimationDuration;
                xamlMember.Setter = set_21_ChartSeries_AnimationDuration;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.Chart":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Chart", "Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember.Getter = get_22_ChartSeries_Chart;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.ShowDataLabels":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ShowDataLabels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_ChartSeries_ShowDataLabels;
                xamlMember.Setter = set_23_ChartSeries_ShowDataLabels;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.ActualXAxis":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ActualXAxis", "Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember.Getter = get_24_ChartSeries_ActualXAxis;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.ActualYAxis":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ActualYAxis", "Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember.Getter = get_25_ChartSeries_ActualYAxis;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.HorizontalHeaderAlignment":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "HorizontalHeaderAlignment", "Microsoft.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_ChartBase_HorizontalHeaderAlignment;
                xamlMember.Setter = set_26_ChartBase_HorizontalHeaderAlignment;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.Header":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_ChartBase_Header;
                xamlMember.Setter = set_27_ChartBase_Header;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.XAxes":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "XAxes", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>");
                xamlMember.Getter = get_28_SfCartesianChart_XAxes;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetStart":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "PlotOffsetStart", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_ChartAxis_PlotOffsetStart;
                xamlMember.Setter = set_29_ChartAxis_PlotOffsetStart;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetEnd":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "PlotOffsetEnd", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_ChartAxis_PlotOffsetEnd;
                xamlMember.Setter = set_30_ChartAxis_PlotOffsetEnd;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineOffset":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "AxisLineOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_ChartAxis_AxisLineOffset;
                xamlMember.Setter = set_31_ChartAxis_AxisLineOffset;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelRotation":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "LabelRotation", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_ChartAxis_LabelRotation;
                xamlMember.Setter = set_32_ChartAxis_LabelRotation;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineStyle":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "AxisLineStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_ChartAxis_AxisLineStyle;
                xamlMember.Setter = set_33_ChartAxis_AxisLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelStyle":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "LabelStyle", "Syncfusion.UI.Xaml.Charts.LabelStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_ChartAxis_LabelStyle;
                xamlMember.Setter = set_34_ChartAxis_LabelStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.Header":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_ChartAxis_Header;
                xamlMember.Setter = set_35_ChartAxis_Header;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderStyle":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "HeaderStyle", "Syncfusion.UI.Xaml.Charts.LabelStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_ChartAxis_HeaderStyle;
                xamlMember.Setter = set_36_ChartAxis_HeaderStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderTemplate":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_ChartAxis_HeaderTemplate;
                xamlMember.Setter = set_37_ChartAxis_HeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.IsInversed":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "IsInversed", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_ChartAxis_IsInversed;
                xamlMember.Setter = set_38_ChartAxis_IsInversed;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.EdgeLabelsDrawingMode":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "EdgeLabelsDrawingMode", "Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_ChartAxis_EdgeLabelsDrawingMode;
                xamlMember.Setter = set_39_ChartAxis_EdgeLabelsDrawingMode;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.MajorGridLineStyle":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "MajorGridLineStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_ChartAxis_MajorGridLineStyle;
                xamlMember.Setter = set_40_ChartAxis_MajorGridLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.MajorTickStyle":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "MajorTickStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_ChartAxis_MajorTickStyle;
                xamlMember.Setter = set_41_ChartAxis_MajorTickStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ZoomPosition":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ZoomPosition", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_ChartAxis_ZoomPosition;
                xamlMember.Setter = set_42_ChartAxis_ZoomPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ZoomFactor":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_ChartAxis_ZoomFactor;
                xamlMember.Setter = set_43_ChartAxis_ZoomFactor;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ShowMajorGridLines":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ShowMajorGridLines", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_ChartAxis_ShowMajorGridLines;
                xamlMember.Setter = set_44_ChartAxis_ShowMajorGridLines;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.EnableAutoIntervalOnZooming":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "EnableAutoIntervalOnZooming", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_ChartAxis_EnableAutoIntervalOnZooming;
                xamlMember.Setter = set_45_ChartAxis_EnableAutoIntervalOnZooming;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsIntersectAction":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "LabelsIntersectAction", "Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_ChartAxis_LabelsIntersectAction;
                xamlMember.Setter = set_46_ChartAxis_LabelsIntersectAction;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelExtent":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "LabelExtent", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_ChartAxis_LabelExtent;
                xamlMember.Setter = set_47_ChartAxis_LabelExtent;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.OpposedPosition":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "OpposedPosition", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_ChartAxis_OpposedPosition;
                xamlMember.Setter = set_48_ChartAxis_OpposedPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.TickLineSize":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "TickLineSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_ChartAxis_TickLineSize;
                xamlMember.Setter = set_49_ChartAxis_TickLineSize;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ShowTrackballLabel":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ShowTrackballLabel", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_ChartAxis_ShowTrackballLabel;
                xamlMember.Setter = set_50_ChartAxis_ShowTrackballLabel;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.TrackballLabelTemplate":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "TrackballLabelTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_ChartAxis_TrackballLabelTemplate;
                xamlMember.Setter = set_51_ChartAxis_TrackballLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.CrosshairLabelTemplate":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "CrosshairLabelTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_ChartAxis_CrosshairLabelTemplate;
                xamlMember.Setter = set_52_ChartAxis_CrosshairLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelTemplate":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "LabelTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_ChartAxis_LabelTemplate;
                xamlMember.Setter = set_53_ChartAxis_LabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.AutoScrollingMode":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "AutoScrollingMode", "Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_ChartAxis_AutoScrollingMode;
                xamlMember.Setter = set_54_ChartAxis_AutoScrollingMode;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.AutoScrollingDelta":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "AutoScrollingDelta", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_ChartAxis_AutoScrollingDelta;
                xamlMember.Setter = set_55_ChartAxis_AutoScrollingDelta;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.VisibleMinimum":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "VisibleMinimum", "Double");
                xamlMember.Getter = get_56_ChartAxis_VisibleMinimum;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.VisibleMaximum":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "VisibleMaximum", "Double");
                xamlMember.Getter = get_57_ChartAxis_VisibleMaximum;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.YAxes":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "YAxes", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>");
                xamlMember.Getter = get_58_SfCartesianChart_YAxes;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.EdgeLabelsVisibilityMode":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "EdgeLabelsVisibilityMode", "Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_RangeAxisBase_EdgeLabelsVisibilityMode;
                xamlMember.Setter = set_59_RangeAxisBase_EdgeLabelsVisibilityMode;
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.MinorTicksPerInterval":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "MinorTicksPerInterval", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_RangeAxisBase_MinorTicksPerInterval;
                xamlMember.Setter = set_60_RangeAxisBase_MinorTicksPerInterval;
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.MinorTickLineSize":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "MinorTickLineSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_RangeAxisBase_MinorTickLineSize;
                xamlMember.Setter = set_61_RangeAxisBase_MinorTickLineSize;
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.MinorGridLineStyle":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "MinorGridLineStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_RangeAxisBase_MinorGridLineStyle;
                xamlMember.Setter = set_62_RangeAxisBase_MinorGridLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.MinorTickStyle":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "MinorTickStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_RangeAxisBase_MinorTickStyle;
                xamlMember.Setter = set_63_RangeAxisBase_MinorTickStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.ShowMinorGridLines":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ShowMinorGridLines", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_RangeAxisBase_ShowMinorGridLines;
                xamlMember.Setter = set_64_RangeAxisBase_ShowMinorGridLines;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.Legend":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Legend", "Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_ChartBase_Legend;
                xamlMember.Setter = set_65_ChartBase_Legend;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.SelectionBehavior":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "SelectionBehavior", "Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_SfCartesianChart_SelectionBehavior;
                xamlMember.Setter = set_66_SfCartesianChart_SelectionBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.ZoomPanBehavior":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ZoomPanBehavior", "Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_SfCartesianChart_ZoomPanBehavior;
                xamlMember.Setter = set_67_SfCartesianChart_ZoomPanBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.TrackballBehavior":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "TrackballBehavior", "Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_SfCartesianChart_TrackballBehavior;
                xamlMember.Setter = set_68_SfCartesianChart_TrackballBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.CrosshairBehavior":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "CrosshairBehavior", "Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_SfCartesianChart_CrosshairBehavior;
                xamlMember.Setter = set_69_SfCartesianChart_CrosshairBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.PaletteBrushes":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "PaletteBrushes", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Media.Brush>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_SfCartesianChart_PaletteBrushes;
                xamlMember.Setter = set_70_SfCartesianChart_PaletteBrushes;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.PlotAreaBorderBrush":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "PlotAreaBorderBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_SfCartesianChart_PlotAreaBorderBrush;
                xamlMember.Setter = set_71_SfCartesianChart_PlotAreaBorderBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.PlotAreaBorderThickness":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "PlotAreaBorderThickness", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_SfCartesianChart_PlotAreaBorderThickness;
                xamlMember.Setter = set_72_SfCartesianChart_PlotAreaBorderThickness;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.PlotAreaBackground":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "PlotAreaBackground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_SfCartesianChart_PlotAreaBackground;
                xamlMember.Setter = set_73_SfCartesianChart_PlotAreaBackground;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.IsTransposed":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "IsTransposed", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_SfCartesianChart_IsTransposed;
                xamlMember.Setter = set_74_SfCartesianChart_IsTransposed;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.EnableSideBySideSeriesPlacement":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "EnableSideBySideSeriesPlacement", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_SfCartesianChart_EnableSideBySideSeriesPlacement;
                xamlMember.Setter = set_75_SfCartesianChart_EnableSideBySideSeriesPlacement;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.TooltipBehavior":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "TooltipBehavior", "Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_ChartBase_TooltipBehavior;
                xamlMember.Setter = set_76_ChartBase_TooltipBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.InteractiveBehavior":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "InteractiveBehavior", "Syncfusion.UI.Xaml.Charts.ChartInteractiveBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_ChartBase_InteractiveBehavior;
                xamlMember.Setter = set_77_ChartBase_InteractiveBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.SeriesClipRect":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "SeriesClipRect", "Windows.Foundation.Rect");
                xamlMember.Getter = get_78_ChartBase_SeriesClipRect;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.VerticalHeaderAlignment":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "VerticalHeaderAlignment", "Microsoft.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_ChartBase_VerticalHeaderAlignment;
                xamlMember.Setter = set_79_ChartBase_VerticalHeaderAlignment;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.Minimum":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_SliderBase_Minimum;
                xamlMember.Setter = set_80_SliderBase_Minimum;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.Maximum":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_SliderBase_Maximum;
                xamlMember.Setter = set_81_SliderBase_Maximum;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.MaximumLabelsCount":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "MaximumLabelsCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_SliderBase_MaximumLabelsCount;
                xamlMember.Setter = set_82_SliderBase_MaximumLabelsCount;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.Interval":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Interval", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_SliderBase_Interval;
                xamlMember.Setter = set_83_SliderBase_Interval;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ActiveTrackFill":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ActiveTrackFill", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_SliderBase_ActiveTrackFill;
                xamlMember.Setter = set_84_SliderBase_ActiveTrackFill;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.InactiveTrackFill":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "InactiveTrackFill", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_SliderBase_InactiveTrackFill;
                xamlMember.Setter = set_85_SliderBase_InactiveTrackFill;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ThumbOverlayFill":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ThumbOverlayFill", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_SliderBase_ThumbOverlayFill;
                xamlMember.Setter = set_86_SliderBase_ThumbOverlayFill;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ThumbWidth":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ThumbWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_SliderBase_ThumbWidth;
                xamlMember.Setter = set_87_SliderBase_ThumbWidth;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ThumbHeight":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ThumbHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_SliderBase_ThumbHeight;
                xamlMember.Setter = set_88_SliderBase_ThumbHeight;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ThumbBackground":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ThumbBackground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_SliderBase_ThumbBackground;
                xamlMember.Setter = set_89_SliderBase_ThumbBackground;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SfSlider.Value":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SfSlider");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_SfSlider_Value;
                xamlMember.Setter = set_90_SfSlider_Value;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ShowToolTip":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ShowToolTip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_SliderBase_ShowToolTip;
                xamlMember.Setter = set_91_SliderBase_ShowToolTip;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.StepFrequency":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "StepFrequency", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_SliderBase_StepFrequency;
                xamlMember.Setter = set_92_SliderBase_StepFrequency;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ShowDividers":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ShowDividers", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_SliderBase_ShowDividers;
                xamlMember.Setter = set_93_SliderBase_ShowDividers;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.DividerHeight":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "DividerHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_SliderBase_DividerHeight;
                xamlMember.Setter = set_94_SliderBase_DividerHeight;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.DividerWidth":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "DividerWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_SliderBase_DividerWidth;
                xamlMember.Setter = set_95_SliderBase_DividerWidth;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ShowLabels":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ShowLabels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_SliderBase_ShowLabels;
                xamlMember.Setter = set_96_SliderBase_ShowLabels;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ActiveTrackHeight":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ActiveTrackHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_SliderBase_ActiveTrackHeight;
                xamlMember.Setter = set_97_SliderBase_ActiveTrackHeight;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.InactiveTrackHeight":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "InactiveTrackHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_SliderBase_InactiveTrackHeight;
                xamlMember.Setter = set_98_SliderBase_InactiveTrackHeight;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ThumbStyle":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ThumbStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_SliderBase_ThumbStyle;
                xamlMember.Setter = set_99_SliderBase_ThumbStyle;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ActiveTrackStyle":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ActiveTrackStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_SliderBase_ActiveTrackStyle;
                xamlMember.Setter = set_100_SliderBase_ActiveTrackStyle;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.InactiveTrackStyle":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "InactiveTrackStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_SliderBase_InactiveTrackStyle;
                xamlMember.Setter = set_101_SliderBase_InactiveTrackStyle;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ThumbType":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ThumbType", "Syncfusion.UI.Xaml.Sliders.ThumbType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_SliderBase_ThumbType;
                xamlMember.Setter = set_102_SliderBase_ThumbType;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ThumbOverlayRadius":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ThumbOverlayRadius", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_SliderBase_ThumbOverlayRadius;
                xamlMember.Setter = set_103_SliderBase_ThumbOverlayRadius;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.MinorTicksPerInterval":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "MinorTicksPerInterval", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_SliderBase_MinorTicksPerInterval;
                xamlMember.Setter = set_104_SliderBase_MinorTicksPerInterval;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ShowTicks":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ShowTicks", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_105_SliderBase_ShowTicks;
                xamlMember.Setter = set_105_SliderBase_ShowTicks;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ActiveMajorTickStyle":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ActiveMajorTickStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_SliderBase_ActiveMajorTickStyle;
                xamlMember.Setter = set_106_SliderBase_ActiveMajorTickStyle;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ActiveMinorTickStyle":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ActiveMinorTickStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_SliderBase_ActiveMinorTickStyle;
                xamlMember.Setter = set_107_SliderBase_ActiveMinorTickStyle;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.MajorTickStyle":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "MajorTickStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_SliderBase_MajorTickStyle;
                xamlMember.Setter = set_108_SliderBase_MajorTickStyle;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.MinorTickStyle":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "MinorTickStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_SliderBase_MinorTickStyle;
                xamlMember.Setter = set_109_SliderBase_MinorTickStyle;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.MajorTickLength":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "MajorTickLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_SliderBase_MajorTickLength;
                xamlMember.Setter = set_110_SliderBase_MajorTickLength;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.MinorTickLength":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "MinorTickLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_SliderBase_MinorTickLength;
                xamlMember.Setter = set_111_SliderBase_MinorTickLength;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ActiveLabelTemplate":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ActiveLabelTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_SliderBase_ActiveLabelTemplate;
                xamlMember.Setter = set_112_SliderBase_ActiveLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.LabelTemplate":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "LabelTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_SliderBase_LabelTemplate;
                xamlMember.Setter = set_113_SliderBase_LabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.TickPlacement":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "TickPlacement", "Syncfusion.UI.Xaml.Sliders.Placement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_SliderBase_TickPlacement;
                xamlMember.Setter = set_114_SliderBase_TickPlacement;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.TickOffset":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "TickOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_SliderBase_TickOffset;
                xamlMember.Setter = set_115_SliderBase_TickOffset;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.LabelPlacement":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "LabelPlacement", "Syncfusion.UI.Xaml.Sliders.Placement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_SliderBase_LabelPlacement;
                xamlMember.Setter = set_116_SliderBase_LabelPlacement;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.LabelOffset":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "LabelOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_SliderBase_LabelOffset;
                xamlMember.Setter = set_117_SliderBase_LabelOffset;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.IsInversed":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "IsInversed", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_SliderBase_IsInversed;
                xamlMember.Setter = set_118_SliderBase_IsInversed;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.DividerFill":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "DividerFill", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_119_SliderBase_DividerFill;
                xamlMember.Setter = set_119_SliderBase_DividerFill;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.DividerStroke":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "DividerStroke", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_120_SliderBase_DividerStroke;
                xamlMember.Setter = set_120_SliderBase_DividerStroke;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.DividerStrokeThickness":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "DividerStrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_121_SliderBase_DividerStrokeThickness;
                xamlMember.Setter = set_121_SliderBase_DividerStrokeThickness;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.DividerTemplate":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "DividerTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_122_SliderBase_DividerTemplate;
                xamlMember.Setter = set_122_SliderBase_DividerTemplate;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ActiveDividerTemplate":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ActiveDividerTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_SliderBase_ActiveDividerTemplate;
                xamlMember.Setter = set_123_SliderBase_ActiveDividerTemplate;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ToolTipTemplate":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ToolTipTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_SliderBase_ToolTipTemplate;
                xamlMember.Setter = set_124_SliderBase_ToolTipTemplate;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ToolTipFormat":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ToolTipFormat", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_SliderBase_ToolTipFormat;
                xamlMember.Setter = set_125_SliderBase_ToolTipFormat;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.ToolTipStyle":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ToolTipStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_SliderBase_ToolTipStyle;
                xamlMember.Setter = set_126_SliderBase_ToolTipStyle;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.Orientation":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Orientation", "Microsoft.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_SliderBase_Orientation;
                xamlMember.Setter = set_127_SliderBase_Orientation;
                break;
            case "Syncfusion.UI.Xaml.Sliders.SliderBase.DisabledBrush":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Sliders.SliderBase");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "DisabledBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_SliderBase_DisabledBrush;
                xamlMember.Setter = set_128_SliderBase_DisabledBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.Minimum":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_NumericalAxis_Minimum;
                xamlMember.Setter = set_129_NumericalAxis_Minimum;
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.Maximum":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_NumericalAxis_Maximum;
                xamlMember.Setter = set_130_NumericalAxis_Maximum;
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.Interval":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Interval", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_NumericalAxis_Interval;
                xamlMember.Setter = set_131_NumericalAxis_Interval;
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.RangePadding":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "RangePadding", "Syncfusion.UI.Xaml.Charts.NumericalPadding");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_NumericalAxis_RangePadding;
                xamlMember.Setter = set_132_NumericalAxis_RangePadding;
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.ActualMinimum":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ActualMinimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_NumericalAxis_ActualMinimum;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.ActualMaximum":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ActualMaximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_NumericalAxis_ActualMaximum;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.LabelStyle.LabelFormat":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.LabelStyle");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "LabelFormat", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_LabelStyle_LabelFormat;
                xamlMember.Setter = set_135_LabelStyle_LabelFormat;
                break;
            case "Syncfusion.UI.Xaml.Charts.LabelStyle.FontFamily":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.LabelStyle");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "FontFamily", "Microsoft.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_LabelStyle_FontFamily;
                xamlMember.Setter = set_136_LabelStyle_FontFamily;
                break;
            case "Syncfusion.UI.Xaml.Charts.LabelStyle.Foreground":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.LabelStyle");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Foreground", "Microsoft.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_LabelStyle_Foreground;
                xamlMember.Setter = set_137_LabelStyle_Foreground;
                break;
            case "Syncfusion.UI.Xaml.Charts.LabelStyle.FontSize":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.LabelStyle");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_LabelStyle_FontSize;
                xamlMember.Setter = set_138_LabelStyle_FontSize;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.Placement":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Placement", "Syncfusion.UI.Xaml.Charts.LegendPlacement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_ChartLegend_Placement;
                xamlMember.Setter = set_139_ChartLegend_Placement;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.ToggleSeriesVisibility":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ToggleSeriesVisibility", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_140_ChartLegend_ToggleSeriesVisibility;
                xamlMember.Setter = set_140_ChartLegend_ToggleSeriesVisibility;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.Header":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_ChartLegend_Header;
                xamlMember.Setter = set_141_ChartLegend_Header;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.IsVisible":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "IsVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_ChartLegend_IsVisible;
                xamlMember.Setter = set_142_ChartLegend_IsVisible;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.HeaderTemplate":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_143_ChartLegend_HeaderTemplate;
                xamlMember.Setter = set_143_ChartLegend_HeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.ItemMargin":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ItemMargin", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_144_ChartLegend_ItemMargin;
                xamlMember.Setter = set_144_ChartLegend_ItemMargin;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.CornerRadius":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "CornerRadius", "Microsoft.UI.Xaml.CornerRadius");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_145_ChartLegend_CornerRadius;
                xamlMember.Setter = set_145_ChartLegend_CornerRadius;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.CheckBoxVisibility":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "CheckBoxVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_146_ChartLegend_CheckBoxVisibility;
                xamlMember.Setter = set_146_ChartLegend_CheckBoxVisibility;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.IconVisibility":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "IconVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_147_ChartLegend_IconVisibility;
                xamlMember.Setter = set_147_ChartLegend_IconVisibility;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.IconWidth":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "IconWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_ChartLegend_IconWidth;
                xamlMember.Setter = set_148_ChartLegend_IconWidth;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.IconHeight":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "IconHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_ChartLegend_IconHeight;
                xamlMember.Setter = set_149_ChartLegend_IconHeight;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.BorderBrush":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "BorderBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_150_ChartLegend_BorderBrush;
                xamlMember.Setter = set_150_ChartLegend_BorderBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.Background":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Background", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_151_ChartLegend_Background;
                xamlMember.Setter = set_151_ChartLegend_Background;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.BorderThickness":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "BorderThickness", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_152_ChartLegend_BorderThickness;
                xamlMember.Setter = set_152_ChartLegend_BorderThickness;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.Padding":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Padding", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_153_ChartLegend_Padding;
                xamlMember.Setter = set_153_ChartLegend_Padding;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.HorizontalHeaderAlignment":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "HorizontalHeaderAlignment", "Microsoft.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_154_ChartLegend_HorizontalHeaderAlignment;
                xamlMember.Setter = set_154_ChartLegend_HorizontalHeaderAlignment;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.ItemTemplate":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_155_ChartLegend_ItemTemplate;
                xamlMember.Setter = set_155_ChartLegend_ItemTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.XyDataSeries.YBindingPath":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.XyDataSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "YBindingPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_156_XyDataSeries_YBindingPath;
                xamlMember.Setter = set_156_XyDataSeries_YBindingPath;
                break;
            case "Syncfusion.UI.Xaml.Charts.ScatterSeries.PointHeight":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ScatterSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "PointHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_157_ScatterSeries_PointHeight;
                xamlMember.Setter = set_157_ScatterSeries_PointHeight;
                break;
            case "Syncfusion.UI.Xaml.Charts.ScatterSeries.PointWidth":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ScatterSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "PointWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_158_ScatterSeries_PointWidth;
                xamlMember.Setter = set_158_ScatterSeries_PointWidth;
                break;
            case "Syncfusion.UI.Xaml.Charts.ScatterSeries.CustomTemplate":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ScatterSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "CustomTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_159_ScatterSeries_CustomTemplate;
                xamlMember.Setter = set_159_ScatterSeries_CustomTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ScatterSeries.Stroke":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ScatterSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Stroke", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_160_ScatterSeries_Stroke;
                xamlMember.Setter = set_160_ScatterSeries_Stroke;
                break;
            case "Syncfusion.UI.Xaml.Charts.XyDataSeries.StrokeWidth":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.XyDataSeries");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "StrokeWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_161_XyDataSeries_StrokeWidth;
                xamlMember.Setter = set_161_XyDataSeries_StrokeWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Children":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_162_TreeViewNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Content":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_163_TreeViewNode_Content;
                xamlMember.Setter = set_163_TreeViewNode_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Depth":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Depth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_164_TreeViewNode_Depth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_TreeViewNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.Getter = get_166_TreeViewNode_HasUnrealizedChildren;
                xamlMember.Setter = set_166_TreeViewNode_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_167_TreeViewNode_IsExpanded;
                xamlMember.Setter = set_167_TreeViewNode_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Parent":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_168_TreeViewNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.TrueValue":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "TrueValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_169_DoubleToObjectConverter_TrueValue;
                xamlMember.Setter = set_169_DoubleToObjectConverter_TrueValue;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.FalseValue":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "FalseValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_170_DoubleToObjectConverter_FalseValue;
                xamlMember.Setter = set_170_DoubleToObjectConverter_FalseValue;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.NullValue":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "NullValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_171_DoubleToObjectConverter_NullValue;
                xamlMember.Setter = set_171_DoubleToObjectConverter_NullValue;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.GreaterThan":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "GreaterThan", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_172_DoubleToObjectConverter_GreaterThan;
                xamlMember.Setter = set_172_DoubleToObjectConverter_GreaterThan;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.LessThan":
                userType = (global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlMember(this, "LessThan", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_173_DoubleToObjectConverter_LessThan;
                xamlMember.Setter = set_173_DoubleToObjectConverter_LessThan;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2506")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, 
            global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void StaticInitializer();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2506")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlUserType : global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, 
            global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            StaticInitializer();
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                long value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    long enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt64(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return global::System.Convert.ChangeType(value, global::System.Enum.GetUnderlyingType(this.UnderlyingType));
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public StaticInitializer StaticInitializer { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2506")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::EducationSpendings.EducationSpendings_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

